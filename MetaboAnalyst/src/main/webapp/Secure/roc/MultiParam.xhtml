<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:p="http://primefaces.org/ui"
                template="/frags/_anal_template.xhtml">
    <ui:define name="metaInfo">
        <f:event type="preRenderView" listener="#{sessionBean1.registerPage('Set parameter')}"/> 
    </ui:define>
    <ui:define name="content">
        <h:panelGrid style="padding:30px; font-size: 12px; line-height: 23px; width:100%">
            <h3>Multivariate Exploratory ROC Analysis Overview</h3>
            <p>
                ROC curves are generated by Monte-Carlo cross validation (MCCV) using balanced sub-sampling. 
                In each MCCV, two thirds (2/3) of the samples are used to evaluate the feature importance. 
                The top 2, 3, 5, 10 ...100 (max) important features are then used to build classification models 
                which is validated on the 1/3 the samples that were left out. The procedure were repeated 
                multiple times to calculate the performance and confidence interval of each model. 
            </p>
            <p>
                Users need to specify the <b>classification method</b> and <b>feature ranking method</b>.
                For the feature ranking method, the first two are univaraite approaches, the last three are 
                built-in methods for corresponding classification method. Note for large dataset (> 1000 features), 
                the univairate feature ranking method should be used to save computational time. For PLS-DA algorithm, 
                users can further specify the number of latent variables (LV) to use. If the given number is higher than 
                the actual feature number, the value will be ignored and default 2 LV will be used.
            </p> 
            <h:form>
                <h:panelGrid>
                    <h:panelGrid columns="2" style="margin-left: 40px">
                        <h:outputLabel style="font-weight: bold" value="Select a classification method:"/>
                        <p:selectOneMenu  style="width:180px" styleClass="menu" panelStyleClass="panel" value="#{rocAnalBean.clsMethodOpt}">
                            <f:selectItem itemLabel="Linear SVM" itemValue="svm" />
                            <f:selectItem itemLabel="PLS-DA" itemValue="pls" />
                            <f:selectItem itemLabel="Random Forests" itemValue="rf" />
                        </p:selectOneMenu>
                        <h:outputLabel style="font-weight: bold" value="Select a feature ranking method:"/>
                        <p:selectOneMenu style="width:180px" styleClass="menu" panelStyleClass="panel" value="#{rocAnalBean.featRankOpt}">
                            <f:selectItem itemLabel= "Univariate AUROC" itemValue="auroc" />
                            <f:selectItem itemLabel= "T-statistic" itemValue="tt" />
                            <!--
                            <f:selectItem itemLabel= "Fisher's Exact test" itemValue="fisher" />
                            -->
                            <f:selectItem itemLabel="SVM built-in" itemValue="svm" />
                            <f:selectItem itemLabel="PLS-DA built-in" itemValue="pls" />
                            <f:selectItem itemLabel="RandomForest built-in" itemValue="rf" />
                        </p:selectOneMenu>
                        <h:outputLabel style="font-weight: bold" value="Number of latent variables"/>
                        <h:panelGroup>
                            <p:inputText style="width: 50px" value="#{rocAnalBean.lvNum}" required="true"
                                         requiredMessage="Must set component"/>
                            <h:outputText value="(PLSDA only)"/>
                        </h:panelGroup>
                    </h:panelGrid>
                    <h:panelGrid style="width: 100%; text-align: center; padding-top: 20px">
                        <p:commandButton value="Submit" ajax="false"
                                         onclick="PF('statusDialog').show()" 
                                         oncomplete="PF('statusDialog').hide()" 
                                         action="#{rocAnalBean.performExploreAnalysis()}"/>  
                    </h:panelGrid>
                </h:panelGrid>
            </h:form>
        </h:panelGrid> 
    </ui:define>
</ui:composition>

